COMPUTE RTT

tshark	-i srs_spgw_sgi
	-f "(dst host 172.16.0.2 or dst host 172.16.0.1) and tcp"
	-a "duration:20"
	-l -t e
	-w provaa;
tshark -i srs_spgw_sgi
	-f "(dst host 172.16.0.2 or dst host 172.16.0.1) and tcp"
	-Y tcp.analysis.lost_segment
	-a "duration:20"
	-l -t e > provaa.txt

tshark -r prova_lte.pcapng -2 -R "ip.src==172.16.0.2 or ip.src==172.16.0.1" -q -z io,stat,1,
"MIN(tcp.analysis.ack_rtt)tcp.analysis.ack_rtt",
"MAX(tcp.analysis.ack_rtt)tcp.analysis.ack_rtt",
"AVG(tcp.analysis.ack_rtt)tcp.analysis.ack_rtt",
"tcp.analysis.retransmission",
"frame.number",
"MIN(tcp.window_size)tcp.window_size",
"MAX(tcp.window_size)",
"AVG(tcp.window_size)tcp.window_size"   


* PROBLEMA:
tshark computa il RTT sulla base dei pacchetti mandati (seq numb) e gli ACK ricevuti.
1) Mando un pacchetto con seq.numb.=10 e timestamp t1=000012
2) Ricevo un pacchetto con ack=11 e timestamp t2=000015
3) Stimo il RTT come RTT=t2-t1=000003
MA
TCP potrebbe ritardare l'invio dell'ACK, perché magari fa piggybacking, o ack cumulativo
Quindi il RTT stimato è SEMPRE un upper bound di quello effettivo.

* PROBLEMA:
Il RTT va stimato in UPLOAD.
Se mi metto in download: ricevo il pacchetto, genero subito l'ACK, e il RTT sarà minimo
Se mi metto in upload: mando il pacchetto, non appena ricevo l'ACK stimo il RTT
--> Se sono in .46, devo guardare i pacchetti con ip.dst=.44.

* NOTA:
tcp.analysis.lost_segment : a gap in sequence numbers in the capture.
tcp.analysis.retransmission : displays all retransmissions in the capture
